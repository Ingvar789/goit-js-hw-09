{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAO,CACTC,UAAUC,SAASC,cAAc,SACjCC,WAAYF,SAASC,cAAc,WAGjCE,EAAO,GAUb,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAjBPR,EAAKC,UAAUe,iBAAiB,SAIhC,SAAiBC,GACbZ,EAAKY,EAAEC,OAAOC,MAAQC,OAAOH,EAAEC,OAAOG,M,IAJ1CC,QAAQC,IAAIvB,EAAKC,WACjBD,EAAKI,WAAWY,iBAAiB,SAmBjC,SAA2BC,GACzBA,EAAEO,iBACFxB,EAAKC,UAAUO,MAAMa,MAAQ,GAC7BrB,EAAKC,UAAUwB,KAAKJ,MAAQ,GAC5BrB,EAAKC,UAAUyB,OAAOL,MAAQ,GAC5B,IAAK,IAAIM,EAAW,EAAGA,GAAYtB,EAAKqB,OAAQC,GAAY,EACpDrB,EAAcqB,EAAUtB,EAAKG,OAC5BoB,MAAK,SAAAC,G,IAAEtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,M,OAAWsB,EAAAhC,GAASiC,OAAOC,QAAS,uBAAwCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IACjG0B,OAAI,SAAAL,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,M,OAAYsB,EAAAhC,GAASiC,OAAOI,QAAS,sBAAqCF,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IACxGH,EAAKG,OAASH,EAAKoB,I","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport \"notiflix/dist/notiflix-3.2.6.min.css\";\n\nconst refs = {\n    formInput:document.querySelector('.form'),\n    createtBtn: document.querySelector('button'),\n};\n\nconst data = {};\n\nrefs.formInput.addEventListener('input', onInput);\nconsole.log(refs.formInput);\nrefs.createtBtn.addEventListener('click', onCreateBtnSubmit);\n\nfunction onInput(e) {\n    data[e.target.name] = Number(e.target.value);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n};\n\nfunction onCreateBtnSubmit(e) {\n  e.preventDefault();\n  refs.formInput.delay.value = '';\n  refs.formInput.step.value = '';\n  refs.formInput.amount.value = '';\n    for (let position = 1; position <= data.amount; position += 1) { \n            createPromise(position, data.delay)\n            .then(({position, delay}) => Notiflix.Notify.success((`✅ Fulfilled promise ${position} in ${delay}ms`)))\n            .catch(({ position, delay }) => Notiflix.Notify.failure((`❌ Rejected promise ${position} in ${delay}ms`)));\n        data.delay += data.step;   \n    }\n  \n    }\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","formInput","document","querySelector","createtBtn","$ce04d3a99e08e73b$var$data","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","target","name","Number","value","console","log","preventDefault","step","amount","position1","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.a0089abf.js.map"}